{"version":3,"file":"static/js/267.63c40ea2.chunk.js","mappings":"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","sources":["api.js","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = 'c0eccbee8238aa3ee19c6b09d37fc317';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const fetchTrendingMovies = async () => {\r\n  const response = await axios.get(`${BASE_URL}/trending/movie/week`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n  return response.data.results;\r\n};\r\n\r\nexport const fetchMovieDetails = async movieId => {\r\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchCastDetails = async movieId => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${movieId}/credits?language=en-US`,\r\n    {\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMovieReviews = async movieId => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${movieId}/reviews?language=en-US`,\r\n    {\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMovies = async query => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        query: query,\r\n      },\r\n    });\r\n    return response.data.results || [];\r\n  } catch (error) {\r\n    console.error('Error fetching movies:', error);\r\n    return [];\r\n  }\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  font-size: 1rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  margin-bottom: 1rem;\r\n\r\n  &:focus {\r\n    border-color: #007bff;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={e => onChange(e.target.value)}\r\n      placeholder=\"Search for movies...\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { fetchMovies } from '../api';\r\nimport SearchBox from '../components/SearchBox';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  padding: 2rem;\r\n  background-color: #f0f2f5;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst MovieList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  padding: 0;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst MovieItem = styled.li`\r\n  position: relative;\r\n  width: 200px;\r\n  height: 300px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-size: cover;\r\n  background-position: center;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    display: block;\r\n    padding-top: 150%; /* Maintain aspect ratio */\r\n  }\r\n`;\r\n\r\nconst MovieTitle = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  text-align: center;\r\n  padding: 0.5rem;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst Movies = () => {\r\n  const location = useLocation();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const query = searchParams.get('query') || '';\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!query) return;\r\n\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const data = await fetchMovies(query);\r\n        setMovies(data || []);\r\n      } catch (err) {\r\n        setError(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [query]);\r\n\r\n  const handleSearchChange = newQuery => {\r\n    setSearchParams({ query: newQuery });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SearchBox value={query} onChange={handleSearchChange} />\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>Error: {error.message}</p>}\r\n      <MovieList>\r\n        {Array.isArray(movies) &&\r\n          movies.map(movie => (\r\n            <MovieItem\r\n              key={movie.id}\r\n              style={{\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/w500/${movie.poster_path})`,\r\n              }}\r\n            >\r\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\r\n                <MovieTitle>{movie.title}</MovieTitle>\r\n              </Link>\r\n            </MovieItem>\r\n          ))}\r\n      </MovieList>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","params","api_key","sent","abrupt","data","results","stop","apply","arguments","fetchMovieDetails","_ref2","_callee2","movieId","_context2","_x","fetchCastDetails","_ref3","_callee3","_context3","_x2","fetchMovieReviews","_ref4","_callee4","_context4","_x3","fetchMovies","_ref5","_callee5","query","_context5","t0","console","error","_x4","Input","styled","_templateObject","_taggedTemplateLiteral","value","onChange","_jsx","type","e","target","placeholder","Container","MovieList","_templateObject2","MovieItem","_templateObject3","MovieTitle","_templateObject4","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","get","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setError","useEffect","fetchData","finish","_jsxs","children","SearchBox","newQuery","message","Array","isArray","map","movie","style","backgroundImage","poster_path","Link","to","id","state","from","title"],"sourceRoot":""}